---
title: "Lab 7"
author: "Jazz Zhang (A16149005)"
format: pdf
---

### Clustering

#### K-means clustering

```{r}
hist(rnorm(100000, mean=3))
```

```{r}
tmp <- c(rnorm(30,3), rnorm(30,-3))
a <- cbind(x=tmp, y=rev(tmp))
head(a)

plot(a)
```
K-means function: `kmeans()`

```{r}
k <- kmeans(a, centers=2, nstart=20)
k
```

```{r}
k$size  #size of each cluster
k$cluster #membership vectors
k$centers #center of cluster

plot(a, col=k$cluster, pch=16)
points(k$centers, col="blue", pch=15, cex=2)
```

```{r}
k3 <- kmeans(a, centers=3, nstart=20)
plot(a, col=k3$cluster, pch=16)
points(k3$centers, col="blue", pch=15, cex=2)
```

#### Hierarchical Clustering
Reveal structure rather than imposing strcture (k-means)

Function (base R): `hclust()`, requires distance matrix as input

```{r}
hc <- hclust(dist(a))
hc
```

```{r}
plot(hc)
abline(h=8, col="red")
```

Function to get clusters/groups from a hclust object: `cutree()`

```{r}
grps <- cutree(hc, h=8)
grps
```

```{r}
plot(a, col=grps)
```

#### Principal Component Alalysis (PCA)


```{r}
url <- "https://tinyurl.com/UK-foods"
x <- read.csv(url)
head(x)

dim(x)
```

Q1. 17 rows, 5 columns

```{r}
rownames(x) <- x[,1]
x <- x[,-1]
head(x)
```

```{r}
x <- read.csv(url, row.names=1)
head(x)
```

Q2. `x <- read.csv(url, row.names=1)`. The dataframe can loose data if 
`x <- x[,-1]` is run multiple times.

```{r}
barplot(as.matrix(x), beside=T, col=rainbow(nrow(x)))
```

```{r}
barplot(as.matrix(x), beside=F, col=rainbow(nrow(x)))
```

Q4. `beside=F` will create the stacked bar plot

```{r}
pairs(x, col=rainbow(17), pch=16)
```

Q5. A given point lies on the diagonal for a given plot suggests that the two 
countries have the same values in the category that point belongs to.

Q6. Points in plots comparing N.Ireland and other countries are further away 
from the diagonal of the plots.

Function (PCA in base R): `prcomp()`

```{r}
pca <- prcomp(t(x)) #t(): transpose df (row<->column)
summary(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2", xlim=c(-270,500))
text(pca$x[,1], pca$x[,2], colnames(x))
```

```{r}
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2", xlim=c(-270,500), col=c("orange","red","blue","darkgreen"))
text(pca$x[,1], pca$x[,2], colnames(x), col=c("orange","red","blue","darkgreen"))
```

```{r}
v <- round( pca$sdev^2/sum(pca$sdev^2) * 100 )
v
```

```{r}
z <- summary(pca)
z$importance
```

```{r}
barplot(v, xlab="Principal Component", ylab="Percent Variation")
```

```{r}
par(mar=c(10, 3, 0.35, 0))
barplot( pca$rotation[,1], las=2 )
```

```{r}
par(mar=c(10, 3, 0.35, 0))
barplot( pca$rotation[,2], las=2 )
```

Q9. Fresh potatoes and soft drinks. PC2 tells the major difference between 
Whales and Scotland lies within these two categories.

```{r}
library(ggplot2)

df <- as.data.frame(pca$x)
df_lab <- tibble::rownames_to_column(df, "Country")

ggplot(df_lab) + 
  aes(PC1, PC2, col=Country) + 
  geom_point()
```

```{r}
ggplot(df_lab) + 
  aes(PC1, PC2, col=Country, label=Country) + 
  geom_hline(yintercept = 0, col="gray") +
  geom_vline(xintercept = 0, col="gray") +
  geom_point(show.legend = FALSE) +
  geom_label(hjust=1, nudge_x = -10, show.legend = FALSE) +
  expand_limits(x = c(-300,500)) +
  xlab("PC1 (67.4%)") +
  ylab("PC2 (28%)") +
  theme_bw()
```

```{r}
ld <- as.data.frame(pca$rotation)
ld_lab <- tibble::rownames_to_column(ld, "Food")

ggplot(ld_lab) +
  aes(PC1, Food) +
  geom_col() 
```

```{r}
ggplot(ld_lab) +
  aes(PC1, reorder(Food, PC1), bg=PC1) +
  geom_col() + 
  xlab("PC1 Loadings/Contributions") +
  ylab("Food Group") +
  scale_fill_gradient2(low="purple", mid="gray", high="darkgreen", guide=NULL) +
  theme_bw()
```

```{r}
biplot(pca)
```

```{r}
url2 <- "https://tinyurl.com/expression-CSV"
rna.data <- read.csv(url2, row.names=1)
head(rna.data)

dim(rna.data)
```

Q10. 100 genes, 10 samples

```{r}
pca <- prcomp(t(rna.data), scale=TRUE)
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2")
```

```{r}
summary(pca)
```

```{r}
plot(pca, main="Quick scree plot")
```

```{r}
#Percent variance: percent of difference accounted for by each PC
pca.var <- pca$sdev^2

pca.var.per <- round(pca.var/sum(pca.var)*100, 1)
pca.var.per
```

```{r}
barplot(pca.var.per, main="Scree Plot", 
        names.arg = paste0("PC", 1:10),
        xlab="Principal Component", ylab="Percent Variation")
```

```{r}
colvec <- colnames(rna.data)
colvec[grep("wt", colvec)] <- "red"
colvec[grep("ko", colvec)] <- "blue"

plot(pca$x[,1], pca$x[,2], col=colvec, pch=16,
     xlab=paste0("PC1 (", pca.var.per[1], "%)"),
     ylab=paste0("PC2 (", pca.var.per[2], "%)"))

text(pca$x[,1], pca$x[,2], labels = colnames(rna.data), pos=c(rep(4,5), rep(2,5)))
```

```{r}
df <- as.data.frame(pca$x)

ggplot(df) + 
  aes(PC1, PC2) + 
  geom_point()
```

```{r}
df$samples <- colnames(rna.data) 
df$condition <- substr(colnames(rna.data),1,2)

p <- ggplot(df) + 
        aes(PC1, PC2, label=samples, col=condition) + 
        geom_label(show.legend = FALSE)
p
```

```{r}
p + labs(title="PCA of RNASeq Data",
       subtitle = "PC1 clealy seperates wild-type from knock-out samples",
       x=paste0("PC1 (", pca.var.per[1], "%)"),
       y=paste0("PC2 (", pca.var.per[2], "%)"),
       caption="Class example data") +
     theme_bw()
```

```{r}
#Gene load: find top 10 genes that contribute to PC1 in either direction
loading_scores <- pca$rotation[,1]
gene_scores <- abs(loading_scores) 
gene_score_ranked <- sort(gene_scores, decreasing=TRUE)

## show the names of the top 10 genes
top_10_genes <- names(gene_score_ranked[1:10])
top_10_genes 
```

